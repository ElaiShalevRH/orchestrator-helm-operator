{{- if .Values.sonataFlowOperator.enabled }}
apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Release.Name }}-sonataflow-hook-cleanup
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "-1"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: {{ .Release.Name }}-sonataflow-hook-cleanup
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "0"
rules:
  - apiGroups: 
    - apiextensions.k8s.io
    resources:
    - customresourcedefinitions
    verbs:
    - get
  - apiGroups:
    - sonataflow.org
    resources:
    - sonataflowclusterplatforms
    verbs:
    - delete
  - apiGroups:
    - operators.coreos.com
    resources:
    - clusterserviceversion
    verbs:
    - delete
    - list 
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Release.Name }}-sonataflow-hook-cleanup
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "0"
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-sonataflow-hook-cleanup
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: ClusterRole
  name: {{ .Release.Name }}-sonataflow-hook-cleanup
  apiGroup: rbac.authorization.k8s.io    
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: {{ .Release.Name }}-sonataflow-hook-cleanup
  namespace: {{ .Values.orchestrator.namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "0"    
rules:
  - apiGroups:
    - sonataflow.org
    resources:
    - sonataflowplatforms
    verbs:
    - delete
  {{- if .Values.orchestrator.devmode }}
  - apiGroups:
    - ""
    resources:
    - namespaces
    verbs:
    - delete
  {{- end }}
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: {{ .Release.Name }}-sonataflow-hook-cleanup
  namespace: {{ .Values.orchestrator.namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded,hook-failed
    "helm.sh/hook-weight": "0"    
subjects:
  - kind: ServiceAccount
    name: {{ .Release.Name }}-sonataflow-hook-cleanup
    namespace: {{ .Release.Namespace }}
roleRef:
  kind: Role
  name: {{ .Release.Name }}-sonataflow-hook-cleanup
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ .Release.Name }}-sonataflow-hook-cleanup
  namespace: {{ .Release.Namespace }}
  annotations:
    "helm.sh/hook": pre-delete
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded # add ,hook-failed once verified
    "helm.sh/hook-weight": "1"    
spec:
  template:
    metadata:
      name: {{ .Release.Name }}-sonataflow-hook-cleanup
    spec:
      serviceAccountName: {{ .Release.Name }}-sonataflow-hook-cleanup
      containers:
        - name: cleanup
          image: registry.redhat.io/openshift4/ose-cli:latest
          command:
            - "bin/bash"
            - "-c"
          args:
            - |
              kubectl get crd sonataflowplatforms.sonataflow.org
              if [ $? -eq 0 ]; then
                kubectl delete -n {{ .Values.orchestrator.namespace }} sonataflowplatforms.sonataflow.org sonataflow-platform
              fi
              kubectl get crd sonataflowclusterplatforms.sonataflow.org
              if [ $? -eq 0 ]; then
                kubectl delete sonataflowclusterplatforms.sonataflow.org cluster-platform
              fi              
  {{- if .Values.orchestrator.devmode }}
              kubectl delete namespace {{ .Values.orchestrator.namespace }}
  {{- end }}
              kubectl get csv -oname |grep sonataflow-operator
              if [ $? -eq 0 ]; then
                kubectl delete $results
              fi
              result=$(kubectl get csv -oname |grep sonataflow-operator)
              if [ $? -eq 0 ]; then
                kubectl delete $results | tr '\n' ' '
              fi                   
              echo "Job finished"
      restartPolicy: Never    
{{- end }}
